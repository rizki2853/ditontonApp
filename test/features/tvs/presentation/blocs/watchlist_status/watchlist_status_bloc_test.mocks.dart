// Mocks generated by Mockito 5.1.0 from annotations
// in ditonton/test/features/tvs/presentation/blocs/watchlist_status/watchlist_status_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:ditonton/features/tvs/domain/repositories/tv_repository.dart'
    as _i2;
import 'package:ditonton/features/tvs/domain/usecases/get_watch_list_tv_status.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTVRepository_0 extends _i1.Fake implements _i2.TVRepository {}

/// A class which mocks [GetWatchListTvStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListTvStatus extends _i1.Mock
    implements _i3.GetWatchListTvStatus {
  MockGetWatchListTvStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVRepository_0()) as _i2.TVRepository);
  @override
  set repository(_i2.TVRepository? _repository) =>
      super.noSuchMethod(Invocation.setter(#repository, _repository),
          returnValueForMissingStub: null);
  @override
  _i4.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}
